<%# 44
def 9.tims |t| do
  puts "#{t+1}回目の繰り返し"
end %>

<%# 45
num = rand(10)
if num >= 5
  puts "#{num}は4より大きい"
else
  puts "#{num}は5より小さい"
end %>

<%# 46
def fortune(t)
  num = rand(10)
  lottery = ["凶","中吉","吉", "大吉"].shuffle
  number = t*num%4
  puts lottery[number]
end
puts "誕生日を入力してください"
num = get.to_i
fortune(num) %>

<%# 47
puts "以下から一つを選んで入力してください。
・title
・genre
・year"

choice = gets.to_chomp

if choice = title
  puts @movie.title
elsif choice = genre
  puts @movie.genre
else
  puts @movie.yesr
end %>

<%# 48
class Person
  def initialize(name, age)
    @name = name
    @age = age
  end
end

class Student < Person
  def introduce
    puts "私の名前は#{@name}です。#{@age}歳です"
  end
end

test = Student.new("Taro", 20)
test.introduce %>

49

<%# def include_cat_and_dog?(str)
  if str.inclide?("cat") && str.include("dog")
    puts "True"
  else
    puts "False"
  end
end

# 呼び出し例
include_cat_and_dog?("catdog") %>

50

<%# puts "[0]:カロリーを表示する、[1]:終了する"
num = get.to_i

while num = 0 do
  puts "500kcal"
  puts "[0]:カロリーを表示する、[1]:終了する"
  num = get.to_i
end

模範解答
while true do
  puts "[0]:カロリーを表示する"
  puts "[1]:終了する"
  input = gets.to_i

  if input == 0
    puts "500kcal"
  elsif input == 1
    exit
  end
end %>

51

<%# def register_book(books)
  # 本の著者、タイトル、価格をユーザーに入力させ、保存する
  puts '著者を入力してください'
  author = gets.chomp
  puts 'タイトルを入力してください'
  title = gets.chomp
  puts '価格を入力してください'
  price = gets.to_i
  book = { author: author, title: title, price: price }
  books << book
end

def show_books(books)
  puts "見たい番号を入力してください"
  # 保存された本の一覧を出力する
  books.each do |book,index|
    puts "#{index}: #{book[:title]}"
  end
  num = gets.to_i
  show_detail(num)
end

def show_detail(num)
  # 選択された本の詳細な情報（著者、タイトル、価格）を出力する
  book[num]
  puts "著者 #{book[:author]}"
  puts "タイトル #{book[:title]}"
  puts "価格 #{book[:price]}円"
end


while true do
  puts "番号を入力してください"
  puts "0: 本を登録する"
  puts "1: 本の一覧を見る"
  puts "2: 終了する"
  case gets.to_i
  when 0
    # 本の登録を行う
    register_book(books)
  when 1
    # 保存された本の一覧を出力する
    show_books(books)
  when 2
    exit
  else
    puts '無効な値です'
  end
end %>

52

<%# def register_book(books)
  puts '著者を入力してください'
  author = gets.chomp
  puts 'タイトルを入力してください'
  title = gets.chomp
  puts '価格を入力してください'
  price = gets.to_i
  book = { author: author, title: title, price: price }
  books << book
end

def show_books(books)
  total_price = books.sum { |book| book[:price] }
average_price = total_price / books.size
puts "平均価格: #{average_price}円"
puts "見たい番号を入力してください"
  index = 1
  books.each do |book|
    puts "#{index}: #{book[:title]}"
    index += 1
  end
  input = gets.to_i
  show_detail(books[input - 1])
end

def show_detail(book)
  puts "著者 #{book[:author]}"
  puts "タイトル #{book[:title]}"
  puts "価格 #{book[:price]}円"
end

books = []
while true do
  puts "番号を入力してください"
  puts "0: 本を登録する"
  puts "1: 本の一覧を見る"
  puts "2: 終了する"
  case gets.to_i
  when 0
   register_book(books)
  when 1
    show_books(books)
  when 2
    exit
  else
    puts '無効な値です'
  end

end %>

<%# 53

def get_days(year, month)
    if month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
      days = 31
    
    elseif month == 2
      if year % 4 == 0 && year % 100 == 0 && year % 400 == 0
       days = 29
      else
        days = 28
      end
    else
      days = 30
    end
  end

  puts "年を入力してください："
  year = gets.to_i
  puts "月を入力してください："
  month = gets.to_i

  days = get_days(year, month)
  puts "#{year}年#{month}月は#{days}日間あります"

  回答
  
  def get_days(year, month)
    month_days = [31,28,31,30,31,30,31,31,30,31,30,30]
    if month == 2
      if year % 4 == 0
        if year % 100 == 0 && yaer % 400 != 0
          days = 28
        else
          days = 29
        end
      else 
        days = 28
      end  
    else
      days = month_days[month - 1]
    end

    return days
  end

  puts "年を入力してください："
  year = gets.to_i
  puts "月を入力してください："
  month = gets.to_i

  days = get_days(year, month)
  puts "#{year}年#{month}月は#{days}日間あります" %>

<%# 54

def register_data
  puts "データの登録"
end

def show_data
  puts "データの確認"
end

while true
  puts "選択してください"
  puts "[0]登録する"
  puts "[1]データを確認する"
  puts "[2]終了する"
  input = gets.to_i

  if input == 0
    register_data
  elsif input == 1
    show_data
  elsif input == 2
    return false # exitが正解
  else
    puts "無効な値です"
    return true # 未記入が正解
  end
end %>

<%# 55

def register_data(humans)
  puts "名前を入れてください"
  name = gets.chomp
  puts "年齢を入れてください"
  age = gets.to_i
  puts "身長(m単位)を入れてください"
  height = gets.to_i
  puts "体重を入れてください"
  weight = gets.to_i
  human = {name: name, age: age, height: height, weight: weight}
  humans << human
end

def show_data_list(humans)
  puts "見たい人の番号を選択してください"
  index = 1
  humans.each do |human|
    puts "#{index}:#{human[:name]}"
    index += 1
  end
  number = gets.to_i - 1
  show_data(humans[number])
end

def show_data(humans)
  puts "名前:#{humans[:name]}"
  puts "年齢:#{humans[:age]}"
  puts "身長:#{humans[:height]}"
  puts "体重:#{humans[:weight]}"
end

humans = []
while true
  puts "選択してください"
  puts "[0]登録する"
  puts "[1]データを確認する"
  puts "[2]終了する"
  input = gets.to_i

  if input == 0
    register_data(humans)
  elsif input == 1
   show_data_list(humans)
  elsif input == 2
    exit
  else
    puts "無効な値です"
  end
end %>

<%# 56

def register_data(data)
  puts "名前を入力してください"
  name = gets.chomp
  puts "年齢を入力してください"
  age = gets.chomp
  puts "身長を入力してください（m単位）"
  tall = gets.to_f
  puts "体重を入力してください"
  weight = gets.to_f
  person = { name: name, age: age, tall: tall, weight: weight, bmi: calculte_bmi(tall, weight)}
  data << person
end
def calculte_bmi(tall, weight)
  bmi = weight / tall / tall
end
def show_data_list(data)
  puts "見たい人の番号を選択してください"
  data.each_with_index do |person, index|
    puts "#{index + 1}: #{person[:name]}"
  end
  input = gets.to_i - 1
  show_data(data[input])
end

def show_data(data)
  puts "名前:#{data[:name]}"
  puts "年齢:#{data[:age]}"
  puts "身長:#{data[:tall]}"
  puts "体重:#{data[:weight]}"
  puts "BMI:#{data[:bmi]}"
end

data = []
while true
  puts "選択してください"
  puts "[0]登録する"
  puts "[1]データを確認する"
  puts "[2]終了する"
  input = gets.to_i

  if input == 0
    register_data(data)
  elsif input == 1
    show_data_list(data)
  elsif input == 2
    exit
  else
    puts "無効な値です"
  end
end %>